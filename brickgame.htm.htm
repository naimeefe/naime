<!DOCTYPE html>
<html>
  <head>
      <meta charset="utf-8" />
      <title>Brick Game</title>
      <style>
        * { padding: 0;
            margin: 0;
          }
        canvas { background: #FEDCBA;
                 display: block;
                 margin: 0 auto;
               }
      </style>
  </head>
  <body>

    <canvas id="myCanvas" width="500" height="380"></canvas>

    <script>
        var canvas = document.getElementById("myCanvas");
        var ctx = canvas.getContext("2d");
        var ballRadius = 10;
        var x = canvas.width / 2;
        var y = canvas.height - 30;
        var dx = 2;
        var dy = -2;
        var paddleHeight = 10;
        var paddleWidth = 75;
        var paddleX = (canvas.width - paddleWidth) / 2;
        var rightPressed = false;
        var leftPressed = false;
        var brickRowCount = 2;
        var brickColumnCount = 3;
        var brickWidth = 80;
        var brickHeight = 20;
        var brickPadding = 20;
        var brickOffsetTop = 60;
        var brickOffsetLeft = 110;
        var obstacleHeight = 10;
        var obstacleWidth = 150;
        var obstacleX = (canvas.width - obstacleWidth) / 2;
        var score = 0;
        var a=brickColumnCount;
        var color="lightBlue"
        var bricks = [];
        for (var c = 0; c < 5; c++) {
            bricks[c] = [];
            for (var r = 0; r < 5; r++) {
                bricks[c][r] = { x: 0, y: 0, status: 1 };
            }
        }
        document.addEventListener("keydown", keyDownHandler, false);
        document.addEventListener("keyup", keyUpHandler, false);
        function keyDownHandler(e) {
            if (e.key == "Right" || e.key == "ArrowRight") {
                rightPressed = true;
            }
            else if (e.key == "Left" || e.key == "ArrowLeft") {
                leftPressed = true;
            }
        }
        function keyUpHandler(e) {
            if (e.key == "Right" || e.key == "ArrowRight") {
                rightPressed = false;
            }
            else if (e.key == "Left" || e.key == "ArrowLeft") {
                leftPressed = false;
            }
        }
        function obstacleDetection() {
            if(x > obstacleX && x < obstacleX+obstacleWidth && y > (canvas.height/2)+25 && y < (canvas.height/2)+25+obstacleHeight) {
                dy = -dy;
            }
        }
        function collisionDetection() {
            for (var c = 0; c < brickColumnCount; c++) {
                for (var r = 0; r < brickRowCount; r++) {
                    var b = bricks[c][r];
                    if (b.status == 1) {
                        if (x > b.x && x < b.x + brickWidth && y > b.y && y < b.y + brickHeight) {
                            dy = -dy;
                            b.status = 0;
        			              if(r == 0 && c == 0){
                                color = "red";
        	                      score = score + 20;
                            }
                            else if(r == 0 && c == 1){
                                color = "blue";
                                score = score + 40;
                            }
                            else if(r == 0 && c == 2){
                                color = "green";
                                score = score + 50;
                            }
                            else if(r == 1 && c == 0){
                                color = "purple";
                                score = score + 60;
                            }
                            else if(r == 1 && c == 1){
                                color = "yellow";
                                score = score + 80;
                            }
                        }
                    }
                }
            }
        }
        function drawBall() {
            ctx.beginPath();
            ctx.arc(x, y, ballRadius, 0, Math.PI * 2);
            ctx.fillStyle = color;
            ctx.fill();
            ctx.closePath();
        }
        function drawPaddle() {
            ctx.beginPath();
            ctx.rect(paddleX, canvas.height - paddleHeight-30, paddleWidth, paddleHeight);
            ctx.fillStyle = "lightBlue";
            ctx.fill();
            ctx.closePath();
        }
        function drawBricks() {
            for (var r = 0; r < 1; r++) {
            	  for (var c = 0; c < 3; c++) {
                    if (bricks[c][r].status == 1) {
                        var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;
                        var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;
                        bricks[c][r].x = brickX;
                        bricks[c][r].y = brickY;
                        ctx.beginPath();
                        ctx.rect(brickX, brickY, brickWidth, brickHeight);
            		        if(r==0 && c==0){
                           ctx.fillStyle = "red";
                           ctx.fill();
                        }
            		        else if(r==0 && c==1){
                           ctx.fillStyle = "blue";
                           ctx.fill();
                        }
            		        else{
            			         if(r==0 && c==2){
                              ctx.fillStyle = "green";
                              ctx.fill();
                            }
            			      }
                        ctx.closePath();
                    }
                }
            }
            return ctx.fillStyle;
        }
        function drawBricks1() {
            for (var r = 1; r < 2; r++) {
               for (var c = 0; c < 2; c++) {
                    if (bricks[c][r].status == 1) {
                        var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft+50;
                        var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;
                        bricks[c][r].x = brickX;
                        bricks[c][r].y = brickY;
                        ctx.beginPath();
                        ctx.rect(brickX, brickY, brickWidth, brickHeight);
                        if(r==1 && c==0){
                           ctx.fillStyle = "purple";
                           ctx.fill();
                        }
        		            else if(r==1 && c==1){
                           ctx.fillStyle = "yellow";
                           ctx.fill();
                        }
                        ctx.closePath();
                    }
                }
            }
            return ctx.fillStyle;
        }
        function obstacle(){
        	  ctx.beginPath();
            ctx.rect(obstacleX, (canvas.height/2)+25, obstacleWidth, obstacleHeight);
            ctx.fillStyle = "black";
            ctx.fill();
            ctx.closePath();
        }
        function scoreCounter(){
            if(score == 250) {
                alert("CONGRATULATIONS! Your score is 250!");
                document.location.reload();
                clearInterval(interval);
            }
        }
        function drawScore() {
            ctx.font = "20px Arial";
            ctx.fillStyle = "black";
            ctx.fillText("Score: "+ score, 0, 370);
        }
        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        	  drawScore();
            collisionDetection();
       	    drawBricks();
        	  obstacleDetection();
        	  drawBricks1();
            drawBall();
          	drawPaddle();
          	obstacle();
            scoreCounter();
            if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {
                dx = -dx;
            }
            if (y + dy < ballRadius) {
                dy = -dy;
            }
            else if (y + dy > canvas.height - ballRadius-29) {
                if (x > paddleX && x < paddleX + paddleWidth) {
                    if (y = y - paddleHeight) {
                        dy = -dy;
                    }
                }
                else {
                    alert("GAME OVER");
                    document.location.reload();
                    clearInterval(interval);
                }
            }
            if (rightPressed && paddleX < canvas.width - paddleWidth) {
                paddleX += 4;
            }
            else if (leftPressed && paddleX > 0) {
                paddleX -= 4;
            }
            x += dx;
            y += dy;
        }
        var interval = setInterval(draw, 10);
    </script>
  </body>
</html>
